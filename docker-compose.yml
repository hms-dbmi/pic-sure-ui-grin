version: '3'
services:
  httpd:
    build:
      context: ./httpd
      dockerfile: Dockerfile
    expose:
      - 80
      - 443
    ports:
      - 80:80
      - 443:443
    networks:
      - public
    volumes:
      - $PWD/config/psamaui/settings.json:/usr/local/apache2/htdocs/psamaui/picSure/settings.json
      - $PWD/config/psamaui/settings.json:/usr/local/apache2/htdocs/psamaui/settings/settings.json
      - $PWD/config/picsureui/settings.json:/usr/local/apache2/htdocs/picsureui/settings/settings.json
    #   - ./target/pic-sure-ui:/usr/local/apache2/htdocs
    #   - ./src/main/javascript/overrides:/usr/local/apache2/htdocs/overrides
    #   - ./src/main/resources:/usr/local/apache2/htdocs/settings

  ## PIC-SURE API Stack ##
  # IRCT
  irct:
    image: dbmi/irct:${irct_version}
    labels:
      - "edu.hms.harvard.dbmi.stack.name=${STACK_NAME}"
    depends_on:
      - httpd
      - i2b2-wildfly
    env_file:
      - ${ENV_FILE}
    volumes:
      - $PWD/config/irct/standalone.xml:/opt/jboss/wildfly/standalone/configuration/standalone.xml
    restart: always
    networks:
      - public
    expose:
      - 8080

# PIC-SURE i2b2-wildfly resource
  i2b2-wildfly:
    image: dbmi/i2b2-wildfly:${i2b2_wildfly_version}
    labels:
      - "edu.hms.harvard.dbmi.stack.name=${STACK_NAME}"
    env_file:
      - ${ENV_FILE}
    environment:
      - JAVA_OPTS=-Xms512m -Xmx1024m -XX:MetaspaceSize=96M -XX:MaxMetaspaceSize=256m -Djava.net.preferIPv4Stack=true
    restart: always
    networks:
      - public
    expose:
      - 9090

  wildfly:
    image: jboss/wildfly:15.0.1.Final
    labels:
      - "edu.hms.harvard.dbmi.stack.name=${STACK_NAME}"
    env_file:
      - ${ENV_FILE}
    restart: always
    expose:
      - 8787
    networks:
      - public
    entrypoint: /opt/jboss/wildfly/bin/standalone.sh -b 0.0.0.0 -bmanagement 0.0.0.0 --debug 0.0.0.0:8787
    user: root
    ports:
      - 8787:8787
    volumes:
      - $PWD/config/wildfly/modules/system/layers/base/com/sql/:/opt/jboss/wildfly/modules/system/layers/base/com/sql/
      - $PWD/config/wildfly/deployments/:/opt/jboss/wildfly/standalone/deployments/
      - $PWD/config/wildfly/standalone.xml:/opt/jboss/wildfly/standalone/configuration/standalone.xml
    depends_on:
      - copy-picsure2-war
      - copy-psama-war
      - copy-irct-bch-resource
      - copy-irct-cchmc-resource
      - copy-irct-chop-resource

  copy-picsure2-war:
    image: dbmi/picsure2:${picsure2_version}
    user: root
    volumes:
      - $PWD/config/wildfly/:/opt/local/docker-config/wildfly/
    networks:
      - public
    entrypoint: cp /opt/jboss/wildfly/standalone/deployments/pic-sure-api-2.war /opt/local/docker-config/wildfly/deployments/

  copy-psama-war:
    image: dbmi/pic-sure-auth-services:${psama_version}
    user: root
    volumes:
      - $PWD/config/wildfly/:/opt/local/docker-config/wildfly/
    networks:
      - public
    entrypoint: cp /opt/jboss/wildfly/standalone/deployments/pic-sure-auth-services.war /opt/local/docker-config/wildfly/deployments/

  copy-irct-bch-resource:
    image: dbmi/pic-sure-irct-resource:picsure246-jndi.8c898d
    user: root
    volumes:
      - $PWD/config/irct-resources-webxml/bch/web.xml:/opt/local/docker-config/webxml/web.xml
      - $PWD/config/wildfly/:/opt/local/docker-config/wildfly/
    networks:
      - public
    entrypoint:
      - /opt/jboss/wildfly/bin/jboss-cli.sh --connect --command="deployment-overlay add --name=myoverlay --content=WEB-INF/web.xml=/opt/local/docker-config/webxml/web.xml"
      - cp /opt/jboss/wildfly/standalone/deployments/pic-sure-irct-resource.war /opt/local/docker-config/wildfly/deployments/pic-sure-irct-bch-resource.war

  copy-irct-cchmc-resource:
    image: dbmi/pic-sure-irct-resource:picsure246-jndi.8c898d
    user: root
    volumes:
      - $PWD/config/irct-resources-webxml/cchmc/:/opt/local/docker-config/webxml/
      - $PWD/config/wildfly/:/opt/local/docker-config/wildfly/
    networks:
      - public
    entrypoint:
      - /opt/jboss/wildfly/bin/jboss-cli.sh --connect --command="deployment-overlay add --name=myoverlay --content=WEB-INF/web.xml=/opt/local/docker-config/webxml/web.xml"
      - cp /opt/jboss/wildfly/standalone/deployments/pic-sure-irct-resource.war /opt/local/docker-config/wildfly/deployments/pic-sure-irct-cchmc-resource.war

  copy-irct-chop-resource:
    image: dbmi/pic-sure-irct-resource:picsure246-jndi.8c898d
    user: root
    volumes:
      - $PWD/config/irct-resources-webxml/chop/:/opt/local/docker-config/webxml/
      - $PWD/config/wildfly/:/opt/local/docker-config/wildfly/
    networks:
      - public
    entrypoint:
      - /opt/jboss/wildfly/bin/jboss-cli.sh --connect --command="deployment-overlay add --name=myoverlay --content=WEB-INF/web.xml=/opt/local/docker-config/webxml/web.xml"
      - cp /opt/jboss/wildfly/standalone/deployments/pic-sure-irct-resource.war /opt/local/docker-config/wildfly/deployments/pic-sure-irct-chop-resource.war

  # i2b2transmart database. For testing purposes
  # db:
  #   image: dbmi/i2b2transmart-db:${db_version}
  #   labels:
  #     - "edu.hms.harvard.dbmi.stack.name=${STACK_NAME}"
  #   restart: always
  #   networks:
  #     - public
  #   expose:
  #     - 1521
  #   ports:
  #     - ${DOCKER_DB_PORT:-1521}:1521

  # Docker image of MySQL DB for picsure and irct services. Remove if using RDS instead
  # MySQL DB
  mysqldb:
    build:
      context: mysql-db
      dockerfile: Dockerfile
    labels:
      - "edu.hms.harvard.dbmi.stack.name=${STACK_NAME}"
    env_file:
      - ${ENV_FILE}
    restart: always
    command: --datadir=/mysql/data
    networks:
      - public
    expose:
      - 3306
    # PIC-SURE database exposed port
    volumes:
      - mysql-data:/mysql/data

volumes:
  mysql-data:

networks:
  public:
